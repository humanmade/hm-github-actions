name: Build to release branch
description: Merge and build a source branch into a releasable, fully-built branch. Maintains branch history and force-commits gitignore'd built files.
author: Human Made

inputs:
  source_branch:
    description: Name of source branch.
    required: true
  release_branch:
    description: Name of target release branch. Will be updated with a merge commit including built code.
    required: true
  built_asset_paths:
    description: Generated assets to forcibly include in release branch commit. Overrides .gitignore.
    required: true
  build_script:
    description: Command to run to build code. "npm ci; npm run build" by default.
    default: |
      npm ci
      npm run build
    required: false
  commit_user_name:
    description: Name to use for release branch commit author.
    default: "Your friendly neighborhood GH Actions Bot"
    required: false
  commit_user_email:
    description: Email to use for release branch commit email.
    default: "<>"
    required: false

runs:
  using: composite

  steps:
    - name: Configure git
      shell: bash
      run: |
        git config user.name "${{ inputs.commit_user_name }}"
        git config user.email "${{ inputs.commit_user_email }}"

    - name: Check out release branch
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: ${{ inputs.release_branch }}
        fetch-depth: 0

    - name: Merge source into release branch
      shell: bash
      # Simulate "-s theirs", which doesn't exist in git for sensible reasons
      # which do not apply to our current situation.
      # https://web.archive.org/web/20131126171744/http://www.seanius.net/blog/2011/02/git-merge-s-theirs/
      run: |
        git fetch origin '${{ inputs.source_branch }}'
        git fetch origin '${{ inputs.release_branch }}'
        git checkout '${{ inputs.source_branch }}'
        git checkout '${{ inputs.release_branch }}'
        git merge -s ours '${{ inputs.source_branch }}'
        git diff --binary '${{ inputs.source_branch }}' | git apply -R --index
        git commit --amend -m "Merge branch '${{ inputs.source_branch }}' into '${{ inputs.release_branch }}'"

    - name: Build code
      shell: bash
      run: ${{ inputs.build_script }}

    - name: Update release branch
      shell: bash
      run: |
        git add -f ${{ inputs.built_asset_paths }}
        git commit --amend -m "Build to '${{ inputs.release_branch }}' from ${{ inputs.source_branch }}#$( git rev-parse --short ${{ inputs.source_branch }} )"
        git push origin '${{ inputs.release_branch }}':'${{ inputs.release_branch }}'
